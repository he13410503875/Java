#!/usr/bin/env node

var Hjson = require('../lib/hjson.js');
var fs = require('fs');
var os = require('os');

Hjson.setEndOfLine(os.EOL);

var args={}, argv=[];
process.argv.slice(2).forEach(function(x) { if (x[0]==="-") { var i=x.indexOf("="); args[x.substr(1, i>0?i-1:undefined)]=i>0?x.substr(i+1):true; } else argv.push(x); });

if (args["-help"] || args["-?"] || args["?"] || args.h) {
  console.error("usage: hjson [OPTIONS] [INPUT]");
  console.error();
  console.error("  hjson can be used to convert JSON from/to Hjson.");
  console.error();
  console.error("  hjson will read the given JSON/Hjson input file or read from stdin.");
  console.error("  - default: will output as Hjson.");
  console.error("    - with -sl: will output the opening brace on the same line.");
  console.error("    - with -root: will output braces for the root object.");
  console.error("    - with -quote: will quote all strings.");
  console.error("    - with -rt: will round trip comments.");
  console.error("  - with -j or -json: will output as formatted JSON.");
  console.error("  - with -c or -json=compact: will output as JSON.");
  return 0;
}

if (argv.length) {
  var text=fs.readFileSync(argv[0], "utf8");
  convert(text);
}
else {
  var stdin = process.openStdin();
  stdin.setEncoding('utf-8');
  var text = '';
  stdin.on('data', function(chunk) { text += chunk; });
  stdin.on('end', function() { convert(text); });
}

function convert(text) {
  var obj;
  try { obj=Hjson.parse(text, { keepWsc: args.rt }); }
  catch (e) { console.error(e.toString()); return; }

  var result;
  if (args.c || args.json==="compact") result = JSON.stringify(obj);
  else if (args.j || args.json) result = JSON.stringify(obj, null, 2);
  else {
    result = Hjson.stringify(obj, {
      emitRootBraces: args.root,
      bracesSameLine: args.sl,
      quotes: args.quote?"always":"min",
      keepWsc: args.rt,
    });
  }

  process.stdout.write(result + os.EOL);
}
